{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/burak/REPO/smallmarket/components/navigator.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\nimport fetch from 'isomorphic-unfetch';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    serverRuntimeConfig = _getConfig.serverRuntimeConfig,\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar styles = function styles(theme) {\n  return {\n    categoryHeader: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2)\n    },\n    categoryHeaderPrimary: {\n      color: theme.palette.common.white\n    },\n    item: {\n      paddingTop: 1,\n      paddingBottom: 1,\n      color: 'rgba(255, 255, 255, 0.7)',\n      '&:hover,&:focus': {\n        backgroundColor: 'rgba(255, 255, 255, 0.08)'\n      }\n    },\n    itemCategory: {\n      backgroundColor: '#232f3e',\n      boxShadow: '0 -1px 0 #404854 inset',\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2)\n    },\n    firebase: {\n      fontSize: 24,\n      color: theme.palette.common.white\n    },\n    itemActiveItem: {\n      color: '#4fc3f7'\n    },\n    itemPrimary: {\n      fontSize: 'inherit'\n    },\n    itemIcon: {\n      minWidth: 'auto',\n      marginRight: theme.spacing(2)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    }\n  };\n};\n\nfunction Navigator(props) {\n  var classes = props.classes,\n      categories = props.categories,\n      other = _objectWithoutProperties(props, [\"classes\", \"categories\"]);\n\n  console.log(props.categories);\n  return __jsx(Drawer, _extends({\n    variant: \"permanent\"\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(List, {\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(ListItem, {\n    className: clsx(classes.firebase, classes.item, classes.itemCategory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Paperbase\"), __jsx(ListItem, {\n    className: clsx(classes.item, classes.itemCategory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    className: classes.itemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(HomeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    classes: {\n      primary: classes.itemPrimary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Project Overview\")), categories.map(function (_ref) {\n    var id = _ref.id,\n        name = _ref.name,\n        slug = _ref.slug;\n    return __jsx(React.Fragment, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(ListItem, {\n      key: slug,\n      button: true,\n      className: clsx(classes.item, active && classes.itemActiveItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(ListItemIcon, {\n      className: classes.itemIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, icon), __jsx(ListItemText, {\n      classes: {\n        primary: classes.itemPrimary\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, name)), __jsx(Divider, {\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  })));\n}\n\nNavigator.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('get initial');\n          console.log('URL :  ' + serverRuntimeConfig.appURL + '/allcategories');\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(serverRuntimeConfig.appURL + '/allcategories'));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", data);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Navigator);","map":{"version":3,"sources":["/home/burak/REPO/smallmarket/components/navigator.js"],"names":["React","PropTypes","clsx","withStyles","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","HomeIcon","PeopleIcon","DnsRoundedIcon","PermMediaOutlinedIcon","PublicIcon","SettingsEthernetIcon","SettingsInputComponentIcon","TimerIcon","SettingsIcon","PhonelinkSetupIcon","fetch","getConfig","serverRuntimeConfig","publicRuntimeConfig","styles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","Navigator","props","classes","categories","other","console","log","primary","map","id","name","slug","active","icon","getInitialProps","appURL","res","json","data","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\nimport fetch from 'isomorphic-unfetch';\nimport getConfig from 'next/config'\nconst { serverRuntimeConfig, publicRuntimeConfig } = getConfig()\n\nconst styles = theme => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white,\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\n    },\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white,\n  },\n  itemActiveItem: {\n    color: '#4fc3f7',\n  },\n  itemPrimary: {\n    fontSize: 'inherit',\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nfunction Navigator(props) {\n  const { classes, categories,...other } = props;\n  console.log(props.categories)\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\n          Paperbase\n        </ListItem>\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\n          <ListItemIcon className={classes.itemIcon}>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classes.itemPrimary,\n            }}\n          >\n            Project Overview\n          </ListItemText>\n        </ListItem>\n        {categories.map(({ id, name,slug }) => (\n          <React.Fragment key={id}>\n              <ListItem\n                key={slug}\n                button\n                className={clsx(classes.item, active && classes.itemActiveItem)}\n              >\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n                <ListItemText\n                  classes={{\n                    primary: classes.itemPrimary,\n                  }}\n                >\n                  {name}\n                </ListItemText>\n              </ListItem>\n            \n\n            <Divider className={classes.divider} />\n          </React.Fragment>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigator.getInitialProps = async function() {\n  console.log('get initial')\n  console.log('URL :  ' + serverRuntimeConfig.appURL+'/allcategories')\n  const res = await fetch(serverRuntimeConfig.appURL+'/allcategories');\n  const data = await res.json();\n  console.log(data)\n  return data\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\n\n\nexport default withStyles(styles)(Navigator);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/burak/REPO/smallmarket/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport getConfig from 'next/config';\nimport Paperbase from '../components/paperbase';\n\nvar _getConfig = getConfig(),\n    serverRuntimeConfig = _getConfig.serverRuntimeConfig,\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nimport fetch from 'isomorphic-unfetch';\nconsole.log(serverRuntimeConfig.mySecret); // Will only be available on the server side\n\nvar Index = function Index(props) {\n  return __jsx(Paperbase, {\n    categories: props.categories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('get initial');\n          console.log('URL :  ' + serverRuntimeConfig.appURL + 'allcategories');\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(serverRuntimeConfig.appURL + 'allcategories'));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            categories: data\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/burak/REPO/smallmarket/pages/index.js"],"names":["getConfig","Paperbase","serverRuntimeConfig","publicRuntimeConfig","fetch","console","log","mySecret","Index","props","categories","getInitialProps","appURL","res","json","data"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;iBACqDD,SAAS,E;IAAtDE,mB,cAAAA,mB;IAAqBC,mB,cAAAA,mB;;AAC7B,OAAOC,KAAP,MAAkB,oBAAlB;AACAC,OAAO,CAACC,GAAR,CAAYJ,mBAAmB,CAACK,QAAhC,E,CAA0C;;AAE1C,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACV,MAAC,SAAD;AAAW,IAAA,UAAU,EAAIA,KAAK,CAACC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU;AAAA,CAAd;;AAKEF,KAAK,CAACG,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBN,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,mBAAmB,CAACU,MAAhC,GAAuC,eAAnD;AAFsB;AAAA,2CAGJR,KAAK,CAACF,mBAAmB,CAACU,MAApB,GAA2B,eAA5B,CAHD;;AAAA;AAGhBC,UAAAA,GAHgB;AAAA;AAAA,2CAIHA,GAAG,CAACC,IAAJ,EAJG;;AAAA;AAIhBC,UAAAA,IAJgB;AAKtBV,UAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AALsB,2CAMf;AAACL,YAAAA,UAAU,EAAGK;AAAd,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,eAAeP,KAAf","sourcesContent":["import getConfig from 'next/config'\nimport Paperbase from '../components/paperbase'\nconst { serverRuntimeConfig, publicRuntimeConfig } = getConfig()\nimport fetch from 'isomorphic-unfetch'\nconsole.log(serverRuntimeConfig.mySecret) // Will only be available on the server side\n\nconst Index = (props) => (\n    <Paperbase categories = {props.categories}></Paperbase>\n  )\n  \n\n  Index.getInitialProps = async function() {\n    console.log('get initial')\n    console.log('URL :  ' + serverRuntimeConfig.appURL+'allcategories')\n    const res = await fetch(serverRuntimeConfig.appURL+'allcategories');\n    const data = await res.json();\n    console.log(data)\n    return {categories : data}\n  }\n  export default Index;"]},"metadata":{},"sourceType":"module"}